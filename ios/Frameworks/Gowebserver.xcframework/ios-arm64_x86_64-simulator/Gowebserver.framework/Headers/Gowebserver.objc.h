// Objective-C API for talking to shenganlee.com/gowebserver Go package.
//   gobind -lang=objc shenganlee.com/gowebserver
//
// File is generated by gobind. Do not edit.

#ifndef __Gowebserver_H__
#define __Gowebserver_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class GowebserverAddHeaders;
@class GowebserverConfig;
@class GowebserverHeader;
@class GowebserverIndexHeaders;
@class GowebserverProxy;
@class GowebserverRouter;
@class GowebserverServerConfig;

@interface GowebserverAddHeaders : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull regex;
// skipped field AddHeaders.Headers with unsupported type: map[string]string

// skipped method AddHeaders.Add with unsupported parameter or return types

@end

@interface GowebserverConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) BOOL isRunning;
@property (nonatomic) NSString* _Nonnull serverUrl;
@property (nonatomic) GowebserverServerConfig* _Nullable serverConfig;
- (void)reset;
@end

@interface GowebserverHeader : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field Header.RequestHeaders with unsupported type: []shenganlee.com/gowebserver.AddHeaders

// skipped field Header.ResponseHeaders with unsupported type: []shenganlee.com/gowebserver.AddHeaders

// skipped method Header.Add with unsupported parameter or return types

@end

@interface GowebserverIndexHeaders : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field IndexHeaders.RequestHeaders with unsupported type: map[string]string

// skipped field IndexHeaders.ResponseHeaders with unsupported type: map[string]string

// skipped method IndexHeaders.Add with unsupported parameter or return types

@end

@interface GowebserverProxy : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull path;
@property (nonatomic) NSString* _Nonnull target;
// skipped field Proxy.Skipper with unsupported type: shenganlee.com/gowebserver.Skipper

// skipped field Proxy.Headers with unsupported type: shenganlee.com/gowebserver.Headers

@end

@interface GowebserverRouter : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull path;
@property (nonatomic) NSString* _Nonnull filePath;
// skipped field Router.Headers with unsupported type: shenganlee.com/gowebserver.Headers

// skipped field Router.IndexHeaders with unsupported type: shenganlee.com/gowebserver.IndexHeaders

@end

@interface GowebserverServerConfig : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long port;
// skipped field ServerConfig.Proxys with unsupported type: shenganlee.com/gowebserver.Proxys

// skipped field ServerConfig.Routers with unsupported type: shenganlee.com/gowebserver.Routers

@end

FOUNDATION_EXPORT BOOL GowebserverHealthy(void);

FOUNDATION_EXPORT BOOL GowebserverIsRunning(void);

FOUNDATION_EXPORT void GowebserverLogFileClose(void);

FOUNDATION_EXPORT void GowebserverRestart(void);

FOUNDATION_EXPORT NSString* _Nonnull GowebserverServerUrl(void);

FOUNDATION_EXPORT void GowebserverSetLogFile(NSString* _Nullable logFile);

FOUNDATION_EXPORT NSString* _Nonnull GowebserverStart(NSString* _Nullable serverConfigStr);

FOUNDATION_EXPORT void GowebserverStop(void);

#endif
